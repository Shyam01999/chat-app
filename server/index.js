const express = require('express');
require('dotenv').config();
const app = express();

app.use(express.json());

const authRouter = require('./router/authRouter');
const catchAsync = require('./utils/catchAsync');
const AppError = require('./utils/appError');
const globalErrorHandler = require('./controller/globalErrorHandler/globalErrorHandler');
const projectRouter = require('./router/projectRouter');

const PORT = process.env.PORT || 8000;


//all routes will be here
app.use('/api/v1/auth', authRouter);
app.use('/api/v1/project', projectRouter);

app.use('*',
    catchAsync(async (req, res, next) => {
        // provide custom error message generated by user
        throw new AppError(`Can't find ${req.originalUrl} on this server`, 404)

        // provide error message through global error handler by using catchAsync middleware way without using try catch block
        // throw new Error(`Can't find ${req.originalUrl} on this server`);

        // provide default error message  through global error handler for async function
        // return next(new Error(`Can't find ${req.originalUrl} on this server`))

        // provide error message through global error handler for normal function
        // throw new Error(`Can't find ${req.originalUrl} on this server`);

        // default way to provide error message 
        // res.status(404).json({
        //     status: 'fail',
        //     message: `Can't find ${req.originalUrl} on this server`
        // })
    }))

//global error handler
app.use(globalErrorHandler);

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});